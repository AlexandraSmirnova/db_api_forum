from flask import Blueprint, request
from common.DB_connect import *
from common.helpers import check_data, intersection, get_json 
from user import u_queries as query
from user.u_queries import * 

import json
import MySQLdb

user = Blueprint('user', __name__)
BASE_URL = '/user'

@user.route(BASE_URL + '/create/', methods = ['POST'])
def create():
    con = connect() 
    content = request.json
    file = open('log.txt', 'a')
   #for el in content:
    file.write("request: " + json.dumps(content) + "\n")    
    required_data = ["username", "about", "name", "email"]
    optional = intersection(request = content, values=["isAnonymous"])
    try:
        check_data(data=content, required=required_data)
        user = query.save_user(connect = con , username = content["username"], about = content["about"],name =  content["name"], email =content["email"], optional = optional)
    except Exception as e:
        con.close()
        if e.message == "5":
            response = json.dumps({"code": 5, "response": (e.message)})
            file.write("response: " +response + "\n" )
            file.close()
            return json.dumps({"code": 5, "response": (e.message)})
        response =  json.dumps({"code": 1, "response": (e.message)})
        file.write("response: " +response + "\n" )
        file.close()
        return json.dumps({"code": 1, "response": (e.message)})
    con.close()
    response = json.dumps({"code": 0, "response": user})
    file.write("response: " +response + "\n" )
    file.close()
    return json.dumps({"code": 0, "response": user})

@user.route(BASE_URL + '/details/', methods = ['GET'])
def details():
    con = connect()
    request_data = get_json(request)
    required_data = ["user"]
    try:
        check_data(request_data, required_data)
        user = query.show_user(connect = con, email = request_data["user"])
    except Exception as e:
        con.close()
        return json.dumps({"code" : 1, "response": (e.message)})
    con.close()
    return json.dumps({"code": 0, "response": user})


@user.route(BASE_URL + '/details/', methods = ['GET'])
def follow():
    con = connect()
    request_data = get_json(request)
    required_data = ["follower", "followee"]   
    try:
        check_data(request_data, required_data)
        user = 0
    except Exception as e:
        con.close()
        return json.dumps({"code" : 1, "response": (e.message)})
    con.close()
    return json.dumps({"code": 0, "response": user })
